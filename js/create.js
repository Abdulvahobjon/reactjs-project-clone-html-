function getValue(d) {
        var c = "desktop" === google_tag_manager["GTM-NK4BSSL"].macro(3); switch (d) {
            case "template": var a = c ? zara.analyticsData.pageType : zara.context.analyticsData.pageType; break; case "hostname": a = c ? zara.analyticsData.hostname : zara.context.analyticsData.hostname; break; case "country": a = c ? zara.analyticsData.page.shop : zara.context.analyticsData.page.shop; break; case "language": a = c ? zara.analyticsData.page.language : zara.context.analyticsData.page.language; break; case "category": a = c ? zara.analyticsData.catName || null : zara.context.analyticsData.catName ||
                null; break; case "categoryId": a = c ? zara.analyticsData.catGroupId || null : zara.context.analyticsData.catGroupId || null; break; case "catIdentifier": a = c ? zara.analyticsData.catIdentifier || null : zara.context.analyticsData.catIdentifier || null; break; case "singleProduct": a = c ? [{
                    name: zara.analyticsData.productName, id: zara.analyticsData.productId, recommendationId: zara.analyticsData.productRef.split("-")[0] + zara.analyticsData.colorCode + "-" + zara.analyticsData.productRef.split("-")[1], category: zara.analyticsData.family,
                    value: zara.analyticsData.mainPrice, type: "single"
                }] : [{ name: zara.context.analyticsData.productName, id: zara.context.analyticsData.productId, recommendationId: zara.context.analyticsData.productRef.split("-")[0] + zara.context.analyticsData.colorCode + "-" + zara.context.analyticsData.productRef.split("-")[1], category: zara.context.analyticsData.family, value: zara.context.analyticsData.mainPrice, type: "single" }]; break; case "bundleProducts": d = c ? zara.analyticsData.productBundle : zara.context.analyticsData.productBundle;
                var e = []; d.forEach(function (b) { e.push({ name: b.name, id: b.id, recommendationId: zara.analyticsData.productRef.split("-")[0] + zara.analyticsData.colorCode + "-" + zara.analyticsData.productRef.split("-")[1], category: b.familyName, value: b.price, type: "bundle" }) }); a = e; break; case "cartProducts": d = c ? zara.analyticsData.order.products : zara.context.analyticsData.order.products; var f = []; d.forEach(function (b) { f.push({ name: decodeURIComponent(b.productName), id: b.productId, category: b.family, quantity: b.unitCount, value: b.unitPrice }) });
                a = f; break; case "purchasedProducts": d = c ? zara.analyticsData.order.products : zara.context.analyticsData.order.products; var g = []; d.forEach(function (b) { g.push({ name: c ? decodeURIComponent(b.productName) : b.unitName, id: b.productId, recommendationId: b.sku.split("-")[0].slice(0, -2) + "-" + b.sku.split("-")[1], sku: b.sku, category: b.family, quantity: b.unitCount, value: b.unitPrice }) }); a = g; break; case "quantity": a = c ? zara.analyticsData.order.totalUnits : zara.context.analyticsData.order.totalUnits; break; case "currency": a = c ?
                    zara.analyticsData.page.currency : zara.context.analyticsData.page.currency; break; case "transactionTotal": a = c ? zara.analyticsData.order.totalPrice : zara.context.analyticsData.order.totalPrice; break; case "transactionId": a = c ? zara.analyticsData.order.orderId : zara.context.analyticsData.order.orderId; break; case "transactionTax": a = c ? zara.analyticsData.order.totalTax : zara.context.analyticsData.order.totalTax; break; case "transactionShipping": a = c ? zara.analyticsData.order.shippingPrice : zara.context.analyticsData.order.shippingPrice;
                break; case "userEmail": a = zara.analyticsData.ue; break; case "transactionDiscount": a = zara.analyticsData.order.totalDiscount
        }"undefined" === typeof a && (a = "NONE"); return a
    }
    function create_dataLayer() {
        var d = getValue("template"); switch (d) {
            case "PRODUCT_LIST": case "CATEGORY_VIEW": case "CATEGORY": dataLayer.push({ category: getValue("category"), categoryId: getValue("categoryId"), catIdentifier: getValue("catIdentifier"), currency: getValue("currency"), template: d, hostname: getValue("hostname"), country: getValue("country"), language: getValue("language"), event: "dataLayer_ready", userData: { email: getValue("userEmail") } }); break; case "PRODUCT_DETAILS": case "E-GIFTCARD": case "GIFTCARD": dataLayer.push({ products: null });
                dataLayer.push({ products: getValue("singleProduct"), currency: getValue("currency"), template: d, hostname: getValue("hostname"), country: getValue("country"), language: getValue("language"), event: "dataLayer_ready", userData: { email: getValue("userEmail") } }); break; case "PRODUCT_BUNDLE_DETAILS": dataLayer.push({ products: null }); dataLayer.push({
                    products: getValue("bundleProducts"), currency: getValue("currency"), template: d, hostname: getValue("hostname"), country: getValue("country"), language: getValue("language"), event: "dataLayer_ready",
                    userData: { email: getValue("userEmail") }
                }); break; case "SHOPPING_CART": dataLayer.push({ cartProducts: getValue("cartProducts"), currency: getValue("currency"), transactionTotal: getValue("transactionTotal"), transactionId: getValue("transactionId"), template: d, hostname: getValue("hostname"), country: getValue("country"), language: getValue("language"), event: "dataLayer_ready", userData: { email: getValue("userEmail") } }); break; case "PURCHASE_ORDER_END": case "ORDER_CONFIRMED": dataLayer.push({
                    currency: getValue("currency"),
                    transactionTotal: getValue("transactionTotal"), transactionId: getValue("transactionId"), quantity: getValue("quantity"), purchasedProducts: getValue("purchasedProducts"), transactionTax: getValue("transactionTax"), transactionShipping: getValue("transactionShipping"), transactionDiscount: getValue("transactionDiscount"), template: d, hostname: getValue("hostname"), country: getValue("country"), language: getValue("language"), event: "dataLayer_ready", userData: { email: getValue("userEmail") }
                }); break; case "HOME": case "PRODUCT_SEARCH_START": case "SEARCH_RESULT": case "CHECKOUT_PAYMENT_METHOD": case "USER_LOGON": case "USER_REGISTRATION": case "CHECKOUT_PERSONAL_DETAILS_GUEST": case "CHECKOUT_SHIPPING_METHOD": case "CHECKOUT_PAYMENT_DATA": case "CHECKOUT_ORDER_REVIEW": case "CHECKOUT_SUMMARY": case "PERSONAL_LIST": dataLayer.push({
                    template: d,
                    hostname: getValue("hostname"), currency: getValue("currency"), country: getValue("country"), language: getValue("language"), event: "dataLayer_ready", userData: { email: getValue("userEmail") }
                }); break; default: google_tag_manager["GTM-NK4BSSL"].macro(4).includes("/share/wishlist") && dataLayer.push({ template: "SHARED_WISHLIST", hostname: getValue("hostname"), currency: getValue("currency"), country: getValue("country"), language: getValue("language"), event: "dataLayer_ready", userData: { email: getValue("userEmail") } })
        }
    } create_dataLayer()